# convert.py
CONVERT_OUTPUT_DIR=target/convert
CONVERT_OUTPUT_FILENAME=converted.csv
CONVERT_CHUNK_SIZE=5

# parse.py settings
INPUT_CSV_FILE_LOCATION='./target/convert/converted.csv'
OUTPUT_DIR='./target/parse'

# make_vector.py
INPUT_DIR_FOR_EMBEDDING='./target/parse'
OUTPUT_DIR_FOR_EMBEDDING='./target/embed'

# addTokenInfo.py
INPUT_DIR_FOR_ADDING_TOKEN_INFO='./target/embed'
OUTPUT_DIR_FOR_ADDING_TOKEN_INFO='./target/tokens'

# upload.py
# TODO: Update to real value
# INPUT_DIR_DB_UPLOAD='./input_dir/'
INPUT_DIR_DB_UPLOAD='./target/tokens'

# Flask Server Config
# no need to source .env, docker-compose-flask.yml will use
# both kragen.env and .env
# source .env
MODEL_ID="gpt-3.5-turbo"
PROMPT_TOKEN_COST=0.001
RESPONSE_TOKEN_COST=0.002
TEMPERATURE=1.0
MAX_TOKENS=1536
STOP=null
ORGANIZATION=""
# API_KEY=$OPENAI_API_KEY
EMBEDDING_ID=$OPENAI_EMBEDDING_MODEL
# The weaviate url and key are already in .env
# The docker-compose-flask.yml file will use both kragen.env and .env
# WEAVIATE_URL=$WEAVIATE_URL
# WEAVIATE_API_KEY=$WEAVIATE_API_KEY
WEAVIATE_DB=AlzKB
WEAVIATE_LIMIT=200
